To variablize the values `managed_image_name` and `os_disk_size_gb` in your Packer `json.txt` file so they can be passed from your Azure pipeline, you need to update the JSON template and the pipeline YAML to use placeholders for these values. Here's how to do it:

### 1. Modify the JSON Template (json.txt)
In the JSON file, replace the hardcoded values of `managed_image_name` and `os_disk_size_gb` with variable placeholders:

```json
{
  "variables": {
    "image_folder": "/imagegeneration",
    "imagedata_file": "/imagegeneration/imagedata.json",
    "installer_script_folder": "/imagegeneration/installers",
    "helper_script_folder": "/imagegeneration/helpers",
    "vm_size": "Standard_D4s_v4",
    "capture_name_prefix": "packer",
    "image_version": "dev",
    "image_os": "ubuntu18",
    "run_validation_diskspace": "false",
    "managed_image_name": "{{user `managed_image_name`}}",
    "os_disk_size_gb": "{{user `os_disk_size_gb`}}"
  },
  "builders": [
    {
      "type": "azure-arm",
      "managed_image_resource_group_name": "#{resourceGroup}#",
      "managed_image_name": "{{user `managed_image_name`}}",
      "os_type": "Linux",
      "image_publisher": "Canonical",
      "image_offer": "0001-com-ubuntu-server-focal",
      "image_sku": "20_04-lts",
      "vm_size": "Standard_D2ads_v5",
      "build_resource_group_name": "#{resourceGroup}#",
      "virtual_network_name": "#{vnetName}#",
      "virtual_network_subnet_name": "#{subnetName}#",
      "virtual_network_resource_group_name": "#{resourceGroup}#",
      "shared_image_gallery_destination": {
        "resource_group": "#{resourceGroup}#",
        "gallery_name": "#{imageGalleryName}#",
        "image_name": "{{user `managed_image_name`}}",
        "image_version": "#{GitVersion.SemVer}##{buildRevision}#",
        "replication_regions": ["uksouth"]
      },
      "os_disk_size_gb": "{{user `os_disk_size_gb`}}"
    }
  ],
  ...
}
```

### 2. Modify the Azure Pipeline YAML
You need to pass the `managed_image_name` and `os_disk_size_gb` variables to the Packer build from the Azure pipeline. You can define these variables for each stage and use the `replacetokens` task to replace the placeholders in the Packer template.

Here's how to update your YAML:

```yaml
parameters:
  - name: buildTarget
    type: string
    default: "20"

schedules:
  - cron: "0 0 1-7,15-21 * 1"
    displayName: Every other Monday
    branches:
      include:
        - main
      exclude:
        - win/*
    always: true

pool:
  name: "NexusPrivateAgents-packer"
  vmImage: "ubuntu-latest"

variables:
  buildRevision: ""
  resourceGroup: "nex-ops-uks"
  linuxImageName: "UbuntuPrivateAgentImage"
  linuxImageOsType: "Linux"
  linuxImagePublisher: "Canonical"
  linuxImageOffer: "0001-com-ubuntu-server-$[eq(parameters.buildTarget, '22') ? 'jammy' : 'focal']"
  linuxImageSku: "${{ parameters.buildTarget }}_04-lts"
  linuxTempDiskName: "nex-ops-privateagentbuild-os"
  linuxTempNicName: "nex-ops-privateagentbuild-nic"
  vnetName: "nex-ops-uks-vnet"
  subnetName: "snet-pipelineagents-001"
  imageGalleryName: "nexopssig"

stages:
  - stage: BuildBaseImage240
    jobs:
      - job: Build
        displayName: Image Generation (240 GB)
        timeoutInMinutes: 600
        variables:
          managed_image_name: "UbuntuPrivateAgentImage240"
          os_disk_size_gb: "240"
        steps:
          - script: |
              buildNumber="${BUILD_BUILDNUMBER:2:6}"
              echo $buildNumber
              echo "##vso[task.setvariable variable=buildRevision;]$(echo $buildNumber)"
            displayName: "Setting the revision"

          - task: replacetokens@5
            inputs:
              targetFiles: "ubuntu${{ parameters.buildTarget }}04.json"
              encoding: "auto"
              tokenPattern: "default"
              writeBOM: true
              actionOnMissing: "fail"
              keepToken: false
              actionOnNoFiles: "fail"
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true

          - task: PackerBuild@1
            inputs:
              ConnectedServiceName: "Hexagon MI Nexus Infrastructure - prd - elevated"
              templateType: "custom"
              customTemplateLocation: "$(System.DefaultWorkingDirectory)/ubuntu${{ parameters.buildTarget }}04.json"
  
  - stage: BuildBaseImage120
    jobs:
      - job: Build
        displayName: Image Generation (120 GB)
        timeoutInMinutes: 600
        variables:
          managed_image_name: "UbuntuPrivateAgentImage120"
          os_disk_size_gb: "120"
        steps:
          - script: |
              buildNumber="${BUILD_BUILDNUMBER:2:6}"
              echo $buildNumber
              echo "##vso[task.setvariable variable=buildRevision;]$(echo $buildNumber)"
            displayName: "Setting the revision"

          - task: replacetokens@5
            inputs:
              targetFiles: "ubuntu${{ parameters.buildTarget }}04.json"
              encoding: "auto"
              tokenPattern: "default"
              writeBOM: true
              actionOnMissing: "fail"
              keepToken: false
              actionOnNoFiles: "fail"
              enableTransforms: false
              enableRecursion: false
              useLegacyPattern: false
              enableTelemetry: true

          - task: PackerBuild@1
            inputs:
              ConnectedServiceName: "Hexagon MI Nexus Infrastructure - prd - elevated"
              templateType: "custom"
              customTemplateLocation: "$(System.DefaultWorkingDirectory)/ubuntu${{ parameters.buildTarget }}04.json"
```

In this configuration:
- The `variables` section in each stage defines the `managed_image_name` and `os_disk_size_gb` for that particular stage.
- The `replacetokens` task replaces these variables in the JSON template (`ubuntu${{ parameters.buildTarget }}04.json`).
- The `PackerBuild` task then uses the modified template to build the image.